{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponents.js","components/DishdetailComponents.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/feedback.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","object","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","classname","errMess","console","log","Breadcrumb","BreadcrumbItem","active","required","val","isNaN","Number","maxLength","len","length","CommentForm","toggleModal","setState","isModalOpen","state","values","rating","author","comment","this","postComment","dishId","Nav","navbar","NavItem","Button","outline","onClick","class","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","handleSubmit","Row","Label","htmlFor","select","model","defaultValue","validators","show","messages","text","minLength","textarea","rows","type","color","React","Component","RenderDish","CardBody","CardText","description","RenderComments","comments","commentList","Date","date","toString","substring","DishdetailComponents","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promotionLoading","promotionErrMess","leader","leaderLoading","leaderErrMess","isNumber","validEmail","test","Contact","bind","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","md","Col","placeholder","size","offset","checkbox","ReturnLeaders","leaders","Media","body","heading","About","CardHeader","title","list","addFeedback","feedback","payload","dishesFailed","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","fetchFeedbacks","selectedDish","location","classNames","timeout","path","component","filter","featured","promo","exact","match","parseInt","params","commentsErrMess","resetFeedbackForm","withRouter","connect","promotions","feedbacks","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","temp","json","addComment","catch","firstName","lastName","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","Feedback","errorMess","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.688e1d7d.chunk.js","sourcesContent":["import React from 'react';\n\n// building a simple loading animation\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = \"http://localhost:3001/\"","import React from 'react';\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\n// here Menu is a component\n\n\nfunction RenderMenuItem({dish}){\n    return(\n    <Card>\n        <Link to={`/menu/${dish.id}`}>\n            <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />\n            <CardImgOverlay>\n                <CardTitle>{dish.name}</CardTitle>\n            </CardImgOverlay>\n        </Link>\n    </Card>\n    );\n}\n// here is defined an arrow function instead\nconst Menu = (props)=>{\n    const menu = props.dishes.dishes.map((dish) => {\n    // this return populates the menu  variable\n        return (\n            // key enable identification of each item\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n            {/* I have to use arrow function to pass argument using onClick function */}\n            {/* I am using the onClick Function defined\n            in the MainComponent */}\n                <RenderMenuItem dish={dish}/>\n            </div>\n        );\n    });\n\n    if(props.dishes.isLoading){\n        return(\n            <div className=\"container\">\n                <div classname=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(props.dishes.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n        // this renders the HTML and return to App.js\n    return (\n        <div className=\"container\">\n        {console.log(\"Menu: Return\")}\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Menu</h3>\n                    <hr/>\n                </div>\n            </div>\n            <div className=\"row\">\n                {menu}\n            </div>\n        </div>\n    );\n}\n\n// thisijasijdkasd\nexport default Menu;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem,Modal, ModalHeader, ModalBody, Row,Label,Button,\n    Nav, NavItem } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm,Errors} from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = (val) => !isNaN(Number(val));\n// need to do val and !val as initially they are null\nconst minLength = (len) => (val) => (val) && (val.length >=len);\nconst maxLength = (len) => (val) => !(val) || (val.length <=len);\n\nclass CommentForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isModalOpen:false\n        }\n    }\n\n    toggleModal= ()=>\n    {\n        this.setState({\n            isModalOpen:!this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values){\n        console.log(\"Current Staet is: \",values.rating,values.author,values.comment);\n        // alert(\"Current state is: \"+JSON.stringify(values));\n        this.toggleModal();\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);\n    }\n\n    render(){\n        return(\n            <div className=\"Jumbotron\">\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <Button outline onClick={this.toggleModal}><span class=\"fa fa-pencil\"></span> Submit Comment</Button>\n                    </NavItem>\n                </Nav>\n                {/* building form in the modal */}\n                <Modal \n                    isOpen={this.state.isModalOpen} \n                    toggle={this.toggleModal}>\n                    <ModalHeader>Submit Comment</ModalHeader>\n                    <ModalBody className=\"ml-3 mr-1\">\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select className=\"form-control\"\n                                    model=\".rating\" name=\"rating\" defaultValue=\"5\"\n                                    validators={{\n                                        required\n                                    }}>\n                                        <option>1</option>    \n                                        <option>2</option>\n                                        <option>3</option>    \n                                        <option>4</option>\n                                        <option>5</option>\n                                </Control.select>\n                                <Errors \n                                    className=\"text-danger\"\n                                    model=\".rating\"\n                                    // check only when this is touched\n                                    show=\"touched\"\n                                    messages={{\n                                        required: \"Required\"\n                                    }}\n                                ></Errors>\n                            </Row>\n                            <Row class=\"form-group\">\n                                <Label htmlFor=\"username\">Name</Label>\n                                <Control.text className=\"form-control\"\n                                    model=\".author\" id=\"author\" name=\"author\"\n                                    validators={{\n                                        minLength: minLength(3),maxLength: maxLength(15)\n                                    }}\n                                    />\n                                <Errors \n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    // check only when this is touched\n                                    show=\"touched\"\n                                    messages={{\n                                        // required: \"Required\",\n                                        minLength: 'Must be greater than 2 character',\n                                        maxLength: 'Must be 15 character or less'\n                                    }}\n                                ></Errors>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea className=\"form-control\"\n                                    model=\".comment\" id=\"comment\" name=\"comment\" \n                                    rows=\"5\"/>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction RenderDish({dish}){\n    if(dish!=null)\n    {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n    else\n    {\n        return(\n            <div></div>\n        );\n    }\n}\n\nfunction RenderComments({comments, postComment, dishId}){\n    if(comments!=null)\n    {\n        const commentList = comments.map((comment) => {\n            return (\n                <li>\n                    <ul className=\"list-unstyled m-1\">\n                        <li className=\"m-2\">{comment.comment}</li>\n                        <li className=\"m-2\">-- {comment.author}, {Date(comments.date).toString().substring(4,15)}</li>\n                    </ul>\n                </li>\n            );\n        }\n        )\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                    {commentList}\n                </ul>\n                <CommentForm dishId={dishId}\n                    postComment={postComment}/>\n            </div>\n        );\n    }\n    else\n    {\n        return(\n            <div>adasdsad</div>\n        );\n    }\n}\n\nconst DishdetailComponents=(props)=>{\n    if(props.isLoading){\n        return(\n            <div className=\"container\">\n                <div classname=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    }\n    else if(props.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className=\"container\">\n        {console.log(\"DishDetails\")}\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row\">\n                <RenderDish dish={props.dish}/>\n                <RenderComments comments={props.comments} \n                    postComment={props.postComment}\n                    dishId={props.dish.id}/>\n            </div>\n        </div>\n    );\n}\n\nexport default DishdetailComponents;","import React from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isNavOpen: false,\n            isModalOpen: false\n        }\n        // this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav = ()=> {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal= ()=>\n    {\n        this.setState({\n            isModalOpen:!this.state.isModalOpen\n        });\n    }\n    // value of uncontrolled form using\n    // innerRef\n    handleLogin= (event)=>{\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Rosarrio Ventapesh\"/>\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                {/* building form in the modal */}\n                <Modal isOpen={this.state.isModalOpen} \n                    toggle={this.toggleModal}>\n                    <ModalHeader>Login</ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                // to get the reference of the Input\n                                // this will enable me to call this.username.value\n                                // I think here this refers to innerRef\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport {Card, CardImg, CardBody, CardText, CardTitle, CardSubtitle} from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\n\nfunction RenderCard({item,isLoading,errMess}){\n    if(isLoading){\n        return(\n            <Loading/>\n        );\n    }\n    else if(errMess){\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    return(\n        <Card>\n            <CardImg src={baseUrl + item.image} alt={item.name}/>\n            <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                {/* designation exist only for leader */}\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                <CardText>{item.description}</CardText>\n            </CardBody>\n\n        </Card>\n    );\n}\n\nfunction Home(props){\n    return(\n        <div className=\"container\" >\n            <div className=\"row align-item-start\">\n                <div className=\"col12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}\n                        />\n                </div>\n                <div className=\"col12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promotionLoading}\n                        errMess={props.promotionErrMess}/>\n                </div>\n                <div className=\"col12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                        isLoading={props.leaderLoading}\n                        errMess={props.leaderErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col,Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Control, Form,Errors} from 'react-redux-form';\n\n// ensure the val is not zero\nconst required = (val) => val && val.length;\n// ensure val is less than or equal to len\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n// ensure val is greater than or equal to min len\nconst minLength = (len) => (val) => val && (val.length >= len);\n// Ensure its a number\nconst isNumber = (val) => !isNaN(Number(val));\n// check if valid email. Starts with\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"Current Staet is: \" + JSON.stringify(values));\n        this.props.postFeedback(values.firstname,values.lastname,\n            values.telnum,values.email,values.agree,\n            values.contactType,values.message)\n        // this.props.resetFeedbackForm();\n        // event.preventDefault()\n    }\n\n    render(){\n        // everytime there is a change in the form the componenet is rendered again\n        // the parts that change\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            {/* <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a> */}\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedbac</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                {/* md is column width */}\n                                <Col md={10}>\n                                    <Control.text className=\"form-control\"\n                                        model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        validators={{\n                                            required,minLength: minLength(3),maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        // check only when this is touched\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength: 'Must be greater than 2 character',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    ></Errors>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text className=\"form-control\"\n                                        model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        validators={{\n                                            required,minLength: minLength(3),maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        // check only when this is touched\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength: 'Must be greater than 2 character',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    ></Errors>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text className=\"form-control\"\n                                        model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Num\"\n                                        validators={{\n                                            required, minLength: minLength(10),maxLength: maxLength(10), isNumber\n                                        }}\n                                        />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        // check only when this is touched\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength: 'Telephone Number must be of length 10',\n                                            maxLength: 'Telephone Number must be of length 10',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    ></Errors>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text className=\"form-control\"\n                                    // model represents the model value in store\n                                        model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                        />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        // check only when this is touched\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Required\",\n                                            validEmail: 'Invalid Email address'\n                                        }}\n                                    ></Errors>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox className=\"form-check-input\"\n                                                model=\".agree\" name=\"agree\"/> {' '}\n                                                <strong>May we Contact You?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select className=\"form-control\"\n                                        model=\".contactType\" name=\"contactType\">\n                                        <option>Tel.</option>    \n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea className=\"form-control\"\n                                        model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\n\nconst ReturnLeaders = ({leaders}) => {\n\n    if(leaders.isLoading){\n        return(\n            <div className=\"container\">\n                <div classname=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(leaders.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{leaders.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n\n    const leader_list = leaders.leaders.map((leader) => {\n        return (\n            // <p>Leader {leader.name}</p>\n            <Media className=\"m-2\">\n                <Media className=\"align-self-top mt-2 mr-5\">\n                    <Media object src={baseUrl+leader.image}/>\n                </Media>\n                <Media body>\n                    <Media heading>\n                        <h4>{leader.name}</h4>\n                        <h6>{leader.designation}</h6>\n                    </Media>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>\n        );\n    });\n\n    return leader_list;\n}\n\nconst About = (props) => {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <ReturnLeaders leaders={props.leaders}/>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl';\n\n// will create an action obj\n// const x = () => {} // Does nothing\n// const y = () => ({}) // returns an object\nexport const addComment = (comment) => ({\n    // will only affect comments there I will change comments.js\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId,rating,author,comment) => (dispatch) => {\n\n    const newComment= {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    // comment id will be taken care by the user\n    newComment.date = new Date().toISOString();\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    //   I will send a post message and then get a response\n    // this response will contain the updated comments\n    .then(response => {\n        let temp = response.json();\n        console.log(temp);\n        return temp;\n    })\n    // updating the store\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n}\n\n\n// action creator for adding feedback\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const feedbackFailed = (errMess) => ({\n    type: ActionTypes.FEEDBACK_ERROR,\n    payload: errMess\n});\n\nexport const fetchFeedbacks = () => (dispatch) => {\n\n    // fetch will return a promise ie response\n    return fetch(baseUrl + 'feedback')\n        .then(response=>{\n            // the following if else if when I do recieve a reponse\n            // from the server\n            // if response is ok\n            if(response.ok){\n                // this response will be delivered to the next then\n                return response;\n            }\n            else{\n                var error = new Error('Error '+response.status+': '+response.statusText);\n                error.response = response;\n                // throw error for catch\n                throw error;\n            }\n            \n        },\n        // If I dont recieve any response from server\n        // or server is unreachable\n        // new Error(message)\n        error=>{\n            var errmess=new Error(error.message);\n            throw errmess;\n        })\n        // response.json will convert response into json\n        // which will be returned and I will use it\n        // in the next then as dishes\n        .then(response => response.json())\n        .then(feedbacks => dispatch(addFeedback(feedbacks)))\n        .catch(error=> dispatch(feedbackFailed(error.message)));\n}\n\nexport const postFeedback = (firstName,lastName,telnum,email,agree,contactType,message)=> (dispatch) => {\n    const newFeedback = {\n        firstName: firstName,\n        lastName: lastName,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    }\n    console.log('NEW FEEDBACK: ',newFeedback);\n    return fetch(baseUrl+'feedback',{\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var error = new Error(\"Error \"+response.status+\": \"+response.message);\n            error.response = response;\n            throw error;\n        }\n    },\n        error => {\n            throw error;    \n        }\n    )\n    .then(response => response.json())\n    .then(feedback => {\n        alert(JSON.stringify(feedback));\n        return feedback;\n    })\n    .then(feedback => dispatch(addFeedback(feedback)))\n    .catch(error => console.log(error));\n}\n\n// here instead of returning an action object\n// I am returning a function\n// this is a redux-thunk\n// first dishesLoading action is dispatched \n// after 2 sec addDishes action is dispatched\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    // fetch will return a promise ie response\n    return fetch(baseUrl + 'dishes')\n        .then(response=>{\n            // the following if else if when I do recieve a reponse\n            // from the server\n            // if response is ok\n            if(response.ok){\n                // this response will be delivered to the next then\n                return response;\n            }\n            else{\n                var error = new Error('Error '+response.status+': '+response.statusText);\n                error.response = response;\n                // throw error for catch\n                throw error;\n            }\n            \n        },\n        // If I dont recieve any response from server\n        // or server is unreachable\n        // new Error(message)\n        error=>{\n            var errmess=new Error(error.message);\n            throw errmess;\n        })\n        // response.json will convert response into js object\n        // which will be returned and I will use it\n        // in the next then as dishes\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error=> dispatch(dishesFailed(error.message)));\n}\n\n// tell that the dish is loading\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\n// return an action object\nexport const dishesFailed = (errMess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errMess\n});\n\n// return an action object to add dish\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n\n    // fetch will return a promise ie response\n    return fetch(baseUrl + 'comments')\n        .then(response=>{\n            // the following if else if when I do recieve a reponse\n            // from the server\n            // if response is ok\n            if(response.ok){\n                // this response will be delivered to the next then\n                return response;\n            }\n            else{\n                var error = new Error('Error '+response.status+': '+response.statusText);\n                error.response = response;\n                // throw error for catch\n                throw error;\n            }\n            \n        },\n        // If I dont recieve any response from server\n        // or server is unreachable\n        // new Error(message)\n        error=>{\n            var errmess=new Error(error.message);\n            throw errmess;\n        })\n        // response.json will convert response into json\n        // which will be returned and I will use it\n        // in the next then as dishes\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error=> dispatch(commentsFailed(error.message)));\n}\n\n\n// return an action object\nexport const commentsFailed = (errMess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\n// return an action object to add comments\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n    // fetch will return a promise ie response\n    return fetch(baseUrl + 'promotions')\n        .then(response=>{\n            // the following if else if when I do recieve a reponse\n            // from the server\n            // if response is ok\n            if(response.ok){\n                // this response will be delivered to the next then\n                return response;\n            }\n            else{\n                var error = new Error('Error '+response.status+': '+response.statusText);\n                error.response = response;\n                // throw error for catch\n                throw error;\n            }\n            \n        },\n        // If I dont recieve any response from server\n        // or server is unreachable\n        // new Error(message)\n        error=>{\n            var errmess=new Error(error.message);\n            throw errmess;\n        })\n        // response.json will convert response into json\n        // which will be returned and I will use it\n        // in the next then as dishes\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error=> dispatch(promosFailed(error.message)));\n}\n\n// tell that the dish is loading\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\n// return an action object\nexport const promosFailed = (errMess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errMess\n});\n\n// return an action object to add comments\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    // fetch will return a promise ie response\n    return fetch(baseUrl + 'leaders')\n        .then(response=>{\n            // the following if else if when I do recieve a reponse\n            // from the server\n            // if response is ok\n            if(response.ok){\n                // this response will be delivered to the next then\n                return response;\n            }\n            else{\n                var error = new Error('Error '+response.status+': '+response.statusText);\n                error.response = response;\n                // throw error for catch\n                throw error;\n            }\n            \n        },\n        // If I dont recieve any response from server\n        // or server is unreachable\n        // new Error(message)\n        error=>{\n            var errmess=new Error(error.message);\n            throw errmess;\n        })\n        // response.json will convert response into js object\n        // which will be returned and I will use it\n        // in the next then as dishes\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error=> dispatch(leadersFailed(error.message)));\n}\n\n// tell that the dish is loading\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\n// return an action object\nexport const leadersFailed = (errMess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errMess\n});\n\n// return an action object to add comments\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});","// standard way to specify all the actions\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\nexport const ADD_FEEDBACKS = 'ADD_FEEDBACKS';\nexport const FEEDBACK_ERROR = 'FEEDBACK_ERROR';\n\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React from 'react';\nimport Menu from './MenuComponents';\nimport DishdetailComponents from './DishdetailComponents';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport {Switch, Route, Redirect,withRouter} from 'react-router-dom';\n// Connecting MainComponent to redux store\nimport {connect} from 'react-redux';\nimport {postComment, fetchDishes,fetchComments,fetchPromos,fetchLeaders,postFeedback,fetchFeedbacks} from '../redux/ActionCreators';\nimport {actions} from 'react-redux-form';\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\n\n// getting state from the state\n// the store sends the state as props\nconst mapStateToProps = state =>{\n  return{\n    dishes: state.dishes,\n    comments: state.comments,\n    leaders: state.leaders,\n    promotion: state.promotions,\n    feedbacks: state.feedbacks\n  }\n}\n\n// after adding mapDispatchToProps to connect this function\n// will recieve dispatch on its own.\n// The below function is creating a dispatch function\n// that can be used inside a component\n// In, addComment(...) is an action\n// and dispatch(addComment) is a dispatch function\n// acting on this action and \n// addComment: is the name of the dispatch function that\n// I can use to dispatch actions to the store\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => \n      dispatch(postComment(dishId, rating, author, comment)),\n// This is a thunk\n  fetchDishes: () => {dispatch(fetchDishes())},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  fetchFeedbacks: () => {dispatch(fetchFeedbacks())},\n  postFeedback: (firstName,lastName,telnum,email,agree,contactType,message)=>\n      dispatch(postFeedback(firstName,lastName,telnum,email,agree,contactType,message)),\n  // the form will be named feedback\n  // this dunction resets the form\n  resetFeedbackForm: ()=> {dispatch(actions.reset('feedback'))}\n});\n\nclass Main extends React.Component {\n  constructor(props) {\n    console.log(\"Main: Contructor\")\n    super(props);\n  }\n\n  // after this component is loaded into the view \n  // fetch the dishes\n  componentDidMount(){\n    // thses are called to fetch data from server\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n    this.props.fetchFeedbacks();\n  }\n\n// arrow functions dont have their own this\n// while a normal function does where we have to use bind\n// in the contructor\n  onDishSelect(dishId){\n    console.log(\"Main: DishSelect\")\n    this.setState({selectedDish: dishId});\n    }\n\n  render(){\n\n    const HomePage = ()=>{\n      console.log(\"Main: HomePage\")\n      return(\n        <Home \n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n        dishesLoading={this.props.dishes.isLoading}\n        dishesErrMess={this.props.dishes.errMess}\n        promotion={this.props.promotion.promos.filter((promo) => promo.featured)[0]}\n        promotionLoading={this.props.promotion.isLoading}\n        promotionErrMess={this.props.promotion.errMess}\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n        leaderLoading={this.props.leaders.isLoading}\n        leaderErrMess={this.props.leaders.errMess}\n        />\n      );\n    }\n\n    // Route passes 3 props match, location and history\n    // using match I can get Id\n    const DishWithId = ({match}) => {\n      console.log(\"Main: DishWithId\")\n      return(\n        // dishId specified in the Route path\n        // parseInt converts string to int in provided base, here 10\n        <DishdetailComponents \n          dish={this.props.dishes.dishes.filter((dish) => \n            dish.id === parseInt(match.params.dishId,10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => \n            comment.dishId === parseInt(match.params.dishId,10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    }\n\n    const AboutUs = () => {\n      console.log(\"Main: AboutUs is called\")\n      return(\n        <About leaders={this.props.leaders}/>\n      );\n    }\n\n    return (\n      <div>\n        {console.log(\"Main: Return Render\")}\n        <Header/>\n        <TransitionGroup>\n            <CSSTransition key={this.props.location.key} \n              classNames=\"page\" timeout={300}>\n              <Switch>\n                <Route path=\"/home\" component={HomePage}/>\n                {/* If i want to pass props to a component I need arrow function */}\n                <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes}/>}/>\n                <Route path=\"/menu/:dishId\" component={DishWithId}/>\n                <Route path=\"/aboutus\" component={AboutUs}/>\n                <Route exact path=\"/contactus\" component={() => \n                  <Contact \n                  resetFeedbackForm={this.props.resetFeedbackForm} \n                  postFeedback={this.props.postFeedback} \n                  // feedbacks={this.props.feedbacks}\n                  />}/>\n                <Redirect to=\"/home\"/>\n              </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer/>\n      </div>\n    );\n  }\n}\n// conencting component to react router\n// connect takes 2 optional arguments\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\n// return dishes by default\n// I am chaning the state from DISHES to an object containing\n// 3 properties:\n// isLoading: Dishes are currently being fetched or not\n// errMess: Error message if the loading fails \n// dishes: List of dishes object\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes : []\n    },action) => {\n    switch(action.type){\n        // dishes added successfully\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading:false, errMess:null, dishes:action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            console.log('old',{...state})\n            console.log('new',{...state, isLoading:false, errMess:null, dishes:[]})\n            // ...state create a new object and then apply changes based\n            // on whatever follows\n            return {...state,isLoading:true,errMess:null,dishes:[]}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading:false, errMess:action.payload, dishes:[]}\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n// return dishes by default\nexport const Comments = (state = {\n        errMess: null,\n        comments: []\n    },action) => {\n    switch(action.type){\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess:null, comments:action.payload}\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess:action.payload, comments:[]}\n\n        // i am only introducing ADD_COMMENT case in \n        // this file/reducer. Other reducer will have\n        // no case to catch it hence will ignore it\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            // here i am not persisiting into the db\n            console.log(\"Comment: \",comment);\n            // I can skip things which donot get effected or change\n            return {...state,comments: state.comments.concat(comment)};\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n// return dishes by default\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promos: []\n    },action) => {\n    switch(action.type){\n\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading:false, errMess:null, promos:action.payload}\n\n        case ActionTypes.PROMOS_LOADING:\n            // ...state create a new object and then apply changes based\n            // on whatever follows\n            return {...state,isLoading:true,errMess:null,promos:[]}\n        \n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading:false, errMess:action.payload}\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n// return dishes by default\n// I am chaning the state from DISHES to an object containing\n// 3 properties:\n// isLoading: Dishes are currently being fetched or not\n// errMess: Error message if the loading fails \n// dishes: List of dishes object\nexport const Leaders = (state = {\n        isLoading: true,\n        errMess: null,\n        leaders : []\n    },action) => {\n    switch(action.type){\n        // dishes added successfully\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading:false, errMess:null, leaders:action.payload}\n\n        case ActionTypes.LEADERS_LOADING:\n            // ...state create a new object and then apply changes based\n            // on whatever follows\n            return {...state,isLoading:true,errMess:null,leaders:[]}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading:false, errMess:action.payload, leaders:[]}\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import * as ActionTypes from './ActionTypes';\n\n// return dishes by default\n// I am chaning the state from DISHES to an object containing\n// 3 properties:\n// isLoading: Dishes are currently being fetched or not\n// errMess: Error message if the loading fails \n// dishes: List of dishes object\nexport const Feedback = (state = {\n        errMess: null,\n        feedbacks : []\n    },action) => {\n    switch(action.type){\n        // dishes added successfully\n        case ActionTypes.ADD_FEEDBACKS:\n            return {...state, errMess:null, feedbacks:action.payload}\n        \n        case ActionTypes.FEEDBACK_ERROR:\n            return {...state,errorMess:action.payload,feedbacks:[]}\n\n        case ActionTypes.ADD_FEEDBACK:\n            var feedback = action.payload;\n            // here i am not persisiting into the db\n            console.log(\"feedback: \",feedback);\n            // I can skip things which donot get effected or change\n            return {...state,feedbacks: state.feedbacks.concat(feedback)};\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore'\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n  render(){\n    console.log(\"App.js : Render\")\n    return (\n      // Provider is the Cell phone company\n      // it allows store to be accessed by all\n      // the components(phone)\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// creating redux store\nimport {createStore, combineReducers,applyMiddleware} from 'redux';\n// redux will store the form\nimport {createForms} from 'react-redux-form';\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Promotions} from './promotions';\nimport {Leaders} from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {InitialFeedback} from './forms';\nimport { Feedback } from './feedback';\n\n// create store needs a reducer and an initial state\n// store = database of state and reducer = set of functions\n// that can act on store\nexport const ConfigureStore = () =>{\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            feedbacks: Feedback,\n            // redux will create this reducer and provide the action\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        // adding a middleware\n        applyMiddleware(thunk,logger)\n    );\n\n    return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    {console.log(\"index.js\")}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}